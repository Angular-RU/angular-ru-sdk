name: CI Release
on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          persist-credentials: false

      - name: Setup Node.js and Cache
        uses: ./.github/actions/nodejs

      - name: Setup GIT username and NPM token
        run: |
          git config --global user.name "angular-ru-bot"
          git config --global user.email "angular-ru@yandex.ru"
          git config remote.origin.url https://x-access-token:${{ secrets.ANGULAR_RU_BOT_PAT }}@github.com/$GITHUB_REPOSITORY
          npm config set '//registry.npmjs.org/:_authToken' "${{ secrets.NPM_TOKEN }}"

      - name: Set prev last tag
        run: echo "PREV_LAST_TAG=$(git describe --abbrev=0 --tags)" >> "$GITHUB_ENV"

      - run: | # todo fix later
          npx nx build cdk
          npx nx build ngxs
          npx nx run-many --target=build --parallel=1 --all --exclude $(npx nx affected:apps --base=origin/master --plain)

      - name: Publish npm libraries (optional)
        run: npx nx run-many --target=version --all --parallel=1 --color=true

      - name: Set new last tag
        run: echo "NEW_LAST_TAG=$(git describe --abbrev=0 --tags)" >> "$GITHUB_ENV"

      - name: Generate RELEASE_NOTES.md
        if: ${{ env.PREV_LAST_TAG != env.NEW_LAST_TAG }}
        run: |
          PREVIOUS_VERSION=${{ env.PREV_LAST_TAG }}
          VERSION=${{ env.NEW_LAST_TAG }}
          TIMESTAMP=$(date +"%d.%m.%Y %H:%M")
          CHANGES=$(git log --pretty="- %s" $PREVIOUS_VERSION...$VERSION)
          printf "# 🎁 Release notes (\`$TIMESTAMP\`)\n\n## Changes\n$CHANGES\n\n## Metadata\n\`\`\`\nThis version -------- $VERSION\nPrevious version ---- $PREVIOUS_VERSION\nTotal commits ------- $(echo "$CHANGES" | wc -l)\n\`\`\`\n\n" >> RELEASE_NOTES.md
          npx prettier --write RELEASE_NOTES.md
          git add RELEASE_NOTES.md
          git commit --no-verify -m 'chore: updated RELEASE_NOTES.md [ci skip]'

      - name: Commit and push changes
        run: git push origin && git push origin --tags

concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true
