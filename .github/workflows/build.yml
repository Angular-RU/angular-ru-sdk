name: Angular-RU SDK pipelines

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  CI_MODE: true
  IS_MASTER_BRANCH: ${{ github.ref == 'refs/heads/master' }}
  IS_FORK: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
  NODE_VERSION: 16.10.x

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          persist-credentials: false
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Prepare git
        if: ${{ env.IS_FORK == 'false' || env.IS_MASTER_BRANCH == 'true' }}
        run: |
          git config --global push.default simple
          git config --global user.name "angular-ru-bot"
          git config --global user.email "angular-ru@yandex.ru"
          git config remote.origin.url https://x-access-token:${{ secrets.ANGULAR_RU_BOT_PAT }}@github.com/$GITHUB_REPOSITORY

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}--${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Verify major angular version
        if: ${{ github.ref != 'refs/heads/master' }}
        run: yarn verify:ng

      - name: Build packages
        run: yarn build

      - name: Run unit tests
        run: yarn test

      # move to release.yml
      - name: Deploy npm packages
        if: ${{ env.IS_MASTER_BRANCH == 'true' }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          GH_TOKEN=${{ secrets.ANGULAR_RU_BOT_PAT }} yarn lerna publish

  demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}--${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --ignore-engines --frozen-lockfile

      - name: Build integration apps
        run: yarn integration
