name: Angular-RU SDK pipelines

on: [push]

env:
    NODE_VERSION: '16.9.x'
    CI_MODE: 'true'

jobs:
    setup:
        if: "!contains(github.event.head_commit.message , 'ci skip')"
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: '0'
                  persist-credentials: false

            - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Prepare git
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
              run: |
                  git config --global push.default simple
                  git config --global user.name "angular-ru"
                  git config --global user.email "angular-ru@yandex.ru"
                  git config remote.origin.url https://x-access-token:$GH_TOKEN@github.com/$GITHUB_REPOSITORY

            - name: Restore cache
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                      */*/node_modules
                  key: ${{ hashFiles('**/yarn.lock') }}

            - name: Run install
              run: |
                  yarn install --ignore-engines --frozen-lockfile

            - name: Run build
              run: yarn build

            - name: Run test step
              run: yarn test

            - name: Run build integration apps
              run: yarn integration

            - name: Deploy npm packages
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              if: contains('refs/heads/master', github.ref)
              run: |
                  echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
                  GH_TOKEN=${{ secrets.GH_TOKEN }} yarn lerna publish

    lint:
        needs: setup
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: '0'
                  persist-credentials: false

            - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Restore cache
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                      */*/node_modules
                  key: ${{ hashFiles('**/yarn.lock') }}

            - name: Run install
              run: |
                  yarn install --ignore-engines --frozen-lockfile

            - name: Run lint
              run: |
                  yarn commitlint --from=HEAD~1
                  yarn format
                  yarn lint

            - name: Get last commit message
              id: last-commit-message
              run: |
                  echo "::set-output name=msg::$(git log -1 --pretty=%s)"

            - uses: stefanzweifel/git-auto-commit-action@v4
              with:
                  commit_message: ${{ steps.last-commit-message.outputs.msg }}
                  commit_options: '--amend --no-edit'
                  push_options: '--force'
                  skip_fetch: true
