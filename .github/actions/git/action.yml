name: Angular-RU SDK git prepare
description: Git prepare

inputs:
  username:
    description: Git username
    required: false
    default: angular-ru-bot
  email:
    description: Git email
    required: false
    default: angular-ru@yandex.ru
  token:
    description: Github personal access token
    required: false

outputs:
  branch-name:
    description: Branch name
    value: ${{ steps.output.outputs.branch-name }}
  last-commit-message:
    description: Last commit message
    value: ${{ steps.output.outputs.last-commit-message }}
  is-master:
    description: This branch is master
    value: ${{ steps.output.outputs.is-master }}
  is-not-master:
    description: This branch is not master
    value: ${{ steps.output.outputs.is-not-master }}
  is-repo-owner:
    description: This is own repo
    value: ${{ steps.output.outputs.is-repo-owner }}
  is-fork:
    description: This is fork
    value: ${{ steps.output.outputs.is-fork }}
  username:
    description: Git username
    value: ${{ steps.output.outputs.username }}
  email:
    description: Git user email
    value: ${{ steps.output.outputs.email }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v2.3.4
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/master' }}
      with:
        ref: ${{ github.head_ref }}
        token: ${{ inputs.token }}
        persist-credentials: false
        fetch-depth: 0

    - name: Prepare git with token
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/master' }}
      shell: bash
      run: |
        git config --global push.default simple
        git config --global user.name "${{ inputs.username }}"
        git config --global user.email "${{ inputs.email }}"

    - uses: actions/checkout@v2.3.4
      if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
      with:
        ref: ${{ github.event.pull_request.base.sha }}
        token: ${{ github.token }}
        fetch-depth: 1

    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/master' }}
      shell: bash

    - id: output
      shell: bash
      env:
        IS_REPO_OWNER:
          ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/master' }}
        IS_FORK:
          ${{ github.event.pull_request.head.repo.full_name != github.repository && github.ref != 'refs/heads/master' }}
        IS_MASTER_BRANCH: ${{ github.ref == 'refs/heads/master' }}
        IS_NOT_MASTER_BRANCH: ${{ github.ref != 'refs/heads/master' }}
      run: |
        echo "::set-output name=branch-name::$(echo ${{ github.head_ref }})"
        echo "::set-output name=last-commit-message::$(git log -1 --pretty=%s)"
        echo "::set-output name=is-fork::$(echo ${{ env.IS_FORK }})"
        echo "::set-output name=is-repo-owner::$(echo ${{ env.IS_REPO_OWNER }})"
        echo "::set-output name=is-master::$(echo ${{ env.IS_MASTER_BRANCH }})"
        echo "::set-output name=is-not-master::$(echo ${{ env.IS_NOT_MASTER_BRANCH }})"
        echo "::set-output name=username::$(git config user.name)"
        echo "::set-output name=email::$(git config user.email)"
