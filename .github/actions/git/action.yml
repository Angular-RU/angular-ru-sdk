name: Angular-RU SDK git prepare
description: Git prepare

inputs:
  username:
    description: Git username
    required: false
    default: angular-ru-bot
  email:
    description: Git email
    required: false
    default: angular-ru@yandex.ru
  token:
    description: Github personal access token
    required: false

outputs:
  branch-name:
    description: Branch name
    value: ${{ steps.get-branch.outputs.branch-name }}
  last-commit-message:
    description: Last commit message
    value: ${{ steps.commit-message.outputs.last-commit-message }}
  is-master:
    description: This branch is master
    value: ${{ steps.is-master-checker.outputs.is-master }}
  is-not-master:
    description: This branch is not master
    value: ${{ steps.is-not-master-checker.outputs.is-not-master }}
  is-fork:
    description: This is fork
    value: ${{ steps.is-fork-checker.outputs.is-fork }}
  username:
    description: Git username
    value: ${{ steps.git-username.outputs.username }}
  email:
    description: Git user email
    value: ${{ steps.git-email.outputs.email }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v2 # if (isNotFork)
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
      with:
        ref: ${{ github.head_ref }}
        token: ${{ inputs.token }}
        persist-credentials: false
        fetch-depth: 0

    - uses: actions/checkout@v2 # if (isFork)
      if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
      with:
        fetch-depth: 0

    - name: Prepare git # if (isNotFork)
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.ref == 'refs/heads/master' }}
      shell: bash
      run: |
        git config --global push.default simple
        git config --global user.name "${{ inputs.username }}"
        git config --global user.email "${{ inputs.email }}"
        git config remote.origin.url "https://x-access-token:${{ inputs.token }}@github.com/$GITHUB_REPOSITORY"
        echo "Done for $GITHUB_REPOSITORY"

    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* # if (isNotFork)
      if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
      shell: bash

    - run: git fetch # if (isFork)
      if: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
      shell: bash

    - name: Get branch name
      id: get-branch
      shell: bash
      run: echo "::set-output name=branch-name::$(echo ${{ github.head_ref }})"

    - name: Get last commit message
      id: commit-message
      shell: bash
      run: echo "::set-output name=last-commit-message::$(git log -1 --pretty=%s)"

    - name: Check is fork
      id: is-fork-checker
      env:
        IS_FORK: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
      shell: bash
      run: echo "::set-output name=is-fork::$(echo $IS_FORK)"

    - id: is-master-checker
      env:
        IS_MASTER: ${{ github.ref == 'refs/heads/master' }}
      shell: bash
      run: echo "::set-output name=is-master::$(echo $IS_MASTER)"

    - id: is-not-master-checker
      env:
        IS_NOT_MASTER: ${{ github.ref != 'refs/heads/master' }}
      shell: bash
      run: echo "::set-output name=is-not-master::$(echo $IS_NOT_MASTER)"

    - id: git-username
      shell: bash
      run: echo "::set-output name=username::$(git config user.name)"

    - id: git-email
      shell: bash
      run: echo "::set-output name=email::$(git config user.email)"
