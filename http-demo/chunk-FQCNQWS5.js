import{p as c}from"./chunk-Z3UQHADQ.js";import{Ka as p,Q as i,Y as l,Ya as s,Za as n,i as r,lb as t}from"./chunk-CZZOWNKW.js";var g=(()=>{let e=class e{constructor(){this.apiClient=l(c),this.destroy$=new r}ngOnInit(){this.fetchData(),this.fetchData(),this.fetchData()}ngOnDestroy(){this.destroy$.next(),this.destroy$.complete()}fetchData(){this.apiClient.posts().pipe(i(this.destroy$)).subscribe(),this.apiClient.comments().pipe(i(this.destroy$)).subscribe(),this.apiClient.albums().pipe(i(this.destroy$)).subscribe(),this.apiClient.todos().pipe(i(this.destroy$)).subscribe(),this.apiClient.users().pipe(i(this.destroy$)).subscribe()}};e.\u0275fac=function(a){return new(a||e)},e.\u0275cmp=p({type:e,selectors:[["guide"]],decls:12,vars:0,template:function(a,h){a&1&&(s(0,"div")(1,"h2"),t(2,"DataHttpClient"),n(),s(3,"p"),t(4," Custom http client, with the ability to customize requests, auto unsubscribe and additional request interceptors. "),n(),s(5,"h2"),t(6,"LimitConcurrency (optional)"),n(),s(7,"p"),t(8," There is almost no limit on the number of requests that can be sent in parallel, by default this value is 255, but if necessary, you can change it, for example by setting "),s(9,"b"),t(10,"limitConcurrency: 5"),n(),t(11," . This mean that maximum of 5 requests can be executed in parallel. Next one immediately start only if one of the previous requests is completed. Open the developer tool(F12 -> Network) and see how requests are sent. "),n()())},encapsulation:2,changeDetection:0});let o=e;return o})();export{g as default};
